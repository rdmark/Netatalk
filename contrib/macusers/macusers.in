#!@PERL@

use strict;
use Socket;
use File::Basename;
use vars qw($MAIN_PID $NETATALK_PROCESS $AFPD_PROCESS $PS_STR $MATCH_STR $ASIP_PORT_NO $ASIP_PORT $LSOF);

# Written for linux; may have to be modified for your brand of Unix.
# Support for FreeBSD added by Joe Clarke <marcus@marcuscom.com>.
# Support Solaris added by Frank Lahm <franklahm@googlemail.com>.
# Support has also been added for 16 character usernames.
# Simplified for macOS by dgsga

if ($ARGV[0] =~ /^(-v|-version|--version)$/ ) {
        printf ("%s \(Netatalk @NETATALK_VERSION@\)\n", basename($0));
        exit(1);
} elsif ($ARGV[0] =~ /^(-h|-help|--help)$/ ) {
        printf ("usage: %s \[-v|-version|--version|-h|-help|--help\]\n", basename($0));
        printf ("Show users connecting via AFP\n");
        exit(1);
}

$NETATALK_PROCESS = "netatalk";
$AFPD_PROCESS = "afpd";
$PS_STR    = "-awwxouser,pid,ppid,start,command";
$MATCH_STR = '(\w+)\s+(\d+)\s+(\d+)\s+([\d\w:]+)';
$ASIP_PORT    = "afpovertcp";
$ASIP_PORT_NO = 548;

my %mac = ();

open(LSOF, "lsof -i :$ASIP_PORT |");

while (<LSOF>) {
        next if ($_ !~ /$ASIP_PORT/);
        $_ =~ /\w+\s+(\d+).*->([\w\.-]+).*/;
        my ($pid, $host);
        $pid  = $1;
        $host = $2;
        ($host) = ( $host =~ /(^(\d+\.){3}\d+|[\w\d\-]+)/ );
        $mac{$pid} = $host;
}
print
    "PID      UID      Username         Name                 Logintime Mac\n";
close(LSOF);

open(PS, "ps $PS_STR |") || die "Unable to open a pipe to ``ps''";

$MAIN_PID = 1;
while (<PS>) {
        next if ($_ !~ /$NETATALK_PROCESS/);
        my ($user, $pid, $ppid, $time, $name, $uid, $t, $ip);
        $_ =~ /$MATCH_STR/;
        $MAIN_PID = $2;
}

close(PS);
open(PS, "ps $PS_STR |") || die "Unable to open a pipe to ``ps''";

while (<PS>) {
        next if ($_ !~ /$AFPD_PROCESS/);
        my ($user, $pid, $ppid, $time, $name, $uid, $t, $ip);
        $_ =~ /$MATCH_STR/;
        $user = $1;
        $pid  = $2;
        $ppid = $3;
        $time = $4;

        if ($ppid != $MAIN_PID) {
                # Deal with truncated usernames. Caution: this does make the
                # assumption that no username will be all-numeric.
                if ($user =~ /^[0-9]+$/) {
                        $uid = $user;
                        ($user, $t, $t, $t, $t, $t, $name, $t, $t) = getpwuid($uid);
                } else {
                        ($t, $t, $uid, $t, $t, $t, $name, $t, $t) = getpwnam($user);
                }
                ($name) = ( $name =~ /(^[^,]+)/ );
                printf "%-8d %-8d %-16s %-20s %-9s %s\n", $pid, $uid, $user,
                    $name, $time, $mac{$pid};
        }
}

close(PS);
